import React from "react";
import Head from "next/head";

import { useDispatch } from "react-redux";
import { TextField, Fab, Grid, Divider, Container, Paper } from "@mui/material";

import { setChatData } from "@/redux/home/homeSlice";
import { useGetBotResponseMutation } from "@/redux/home/apiCalls";

import Heading from "@/components/header";
import ListChat from "@/components/listChat";

import styles from "@/styles/Home.module.css";

const Home: React.FC = () => {
  const dispatch = useDispatch();
  // hooks
  const [inputValue, setInputValue] = React.useState<string | null>(null);
  // rtk query
  const [getBotResponse] = useGetBotResponseMutation();

  // handle submit
  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (!inputValue) return;
    const command = inputValue.slice(1);
    const [commandName, delay, ...message] = command.split(" ");
    if (commandName === "delay") {
      setTimeout(() => {
        dispatch(
          setChatData({
            id: "a",
            message: message.join(" "),
            timeStamp: new Date().toLocaleTimeString(),
          })
        );
      }, +delay);
    } else {
      dispatch(
        setChatData({
          id: "a",
          message: inputValue,
          timeStamp: new Date().toLocaleTimeString(),
        })
      );
    }
    const response: any = await getBotResponse(undefined);
    dispatch(
      setChatData({
        id: "b",
        message: response?.data?.[0],
        timeStamp: new Date().toLocaleTimeString(),
      })
    );
    setInputValue(() => "");
  };
  return (
    <>
      <Head>
        <title>Chat with Bot</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Heading title="Chat with Bot" />
        <Grid container component={Paper}>
          <Grid item xs={12}>
            <ListChat />
            <Divider />
            <form onSubmit={handleSubmit}>
              <Grid container spacing={2} className={styles.gridContainer}>
                <Grid item xs={11}>
                  <TextField
                    id="outlined-basic"
                    label="Type a message"
                    variant="outlined"
                    fullWidth
                    value={inputValue}
                    onChange={(e) => setInputValue(e.target.value)}
                  />
                </Grid>
                <Grid item xs={1} pl={1}>
                  <Fab
                    className={styles.sendButton}
                    aria-label="add"
                    type="submit"
                  >
                    Send
                  </Fab>
                </Grid>
              </Grid>
            </form>
          </Grid>
        </Grid>
      </Container>
    </>
  );
};

export default Home;
